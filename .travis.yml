os: linux
dist: trusty
language: generic
sudo: required
branches:
  only:
  - "/^develop\\/.*$/"
env:
  global:
  - LC_CTYPE=en_US.UTF-8
  - LANG=en_US.UTF-8
  - DOCKER_IMAGE_NAME=jpfanappapi:1.0.0
git:
  submodules: false
stages:
- name: develop
  if: branch =~ ^develop/.*$
jobs:
  include:
  - stage: develop
    name: Develop Job
    before_install:
    - openssl aes-256-cbc -K $encrypted_7f44f8e0aa4a_key -iv $encrypted_7f44f8e0aa4a_iv -in secrets.tar.enc -out secrets.tar -d
    - tar xvf secrets.tar
    - chmod 600 jpfanapp_ci
    script:
    - docker build -f Dockerfile --build-arg env=production -t $DOCKER_IMAGE_NAME .
    - docker save -o jpfanappapi-image.tar $DOCKER_IMAGE_NAME
    - scp -i jpfanapp_ci -o StrictHostKeyChecking=no jpfanappapi-image.tar root@178.128.203.132:~/jpfanappapi-image.tar
    - scp -i jpfanapp_ci -o StrictHostKeyChecking=no docker-compose-prod.yml root@178.128.203.132:~/docker-compose-prod.yml
    - scp -i jpfanapp_ci -o StrictHostKeyChecking=no .prod.env root@178.128.203.132:~/.prod.env
    - ssh -i jpfanapp_ci root@178.128.203.132 'mkdir -p nginx'
    - scp -i jpfanapp_ci -o StrictHostKeyChecking=no nginx/server.conf root@178.128.203.132:~/nginx/server.conf
    - ssh -i jpfanapp_ci root@178.128.203.132 'docker load -i jpfanappapi-image.tar && rm jpfanappapi-image.tar'
    - ssh -i jpfanapp_ci root@178.128.203.132 'docker-compose -f docker-compose-prod.yml -p jpperformanceserver up -d --scale api=2'
    after_script:
      rm jpfanapp_ci